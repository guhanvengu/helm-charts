name: Lint and Test Charts

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: ['*', '!master', '!main', '!gh-pages']
  pull_request:
    branches: ['*', '!master', '!main', '!gh-pages']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GITHUB_TOKEN: '${{ secrets.SECRET_GITHUB_TOKEN }}'

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: |
          git fetch --prune --unshallow || echo "Unable to do git fetch --prune --unshallow ..."
          git fetch --prune || echo "Unable to do git fetch --prune ..."

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR" || echo "Unable to set git config user.name ..."
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com" || echo "Unable to set git config user.email ..."

      # See https://github.com/helm/chart-releaser-action/issues/6
      - name: Install Helm
        run: |
          curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          token: '${{ secrets.SECRET_GITHUB_TOKEN }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - uses: actions/setup-python@v2
      #   with:
      #     token: '${{ secrets.SECRET_GITHUB_TOKEN }}'
      #     python-version: '3.8' # ${{ matrix.python-version }}
      #     # architecture: 'x64'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/.ct.yaml )
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config .github/.ct.yaml
      # - name: Create kind cluster
      #   uses: helm/kind-action@v1.0.0
      #   if: steps.list-changed.outputs.changed == 'true'
      # - name: Run chart-testing (install)
      #   run: ct install
