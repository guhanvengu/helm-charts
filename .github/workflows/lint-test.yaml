name: Lint and Test Charts

on: pull_request

jobs:
  lint-test:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     # in this example, there is a newer version already installed, 3.7.7, so the older version will be downloaded
    #     python-version: [3.5, 3.6, 3.7.4, 3.8, 3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

        # with:
        #   fetch-depth: 0
      - name: Fetch history
        run: |
          apt-get update;
          apt-get -y --no-install-recommends --no-install-suggests install git build-essential bash curl wget zip tar gzip;
          git fetch --prune --unshallow || git fetch --prune

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # - name: Install ACT deps
      #   if: ${{ !env.ACT }}
      #   run: |
      #     /bin/sh -c "ls"

      # - name: Set up Helm
      #   uses: azure/setup-helm@v1
      #   id: install

      # See https://github.com/helm/chart-releaser-action/issues/6
      - name: Install Helm
        run: |
          curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - uses: actions/setup-python@v2
        with:
          token: '${{ secrets.SECRET_GITHUB_TOKEN }}'
          python-version: '3.8.6' # ${{ matrix.python-version }}
          # architecture: 'x64'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint
      # - name: Create kind cluster
      #   uses: helm/kind-action@v1.0.0
      #   if: steps.list-changed.outputs.changed == 'true'
      # - name: Run chart-testing (install)
      #   run: ct install
