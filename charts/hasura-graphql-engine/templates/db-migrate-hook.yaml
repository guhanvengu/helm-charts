{{- if .Values.application.migrateCommand -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "trackableappname" . }}-db-migrate
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version| replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      imagePullSecrets:
        {{- toYaml .Values.image.secrets | indent 10 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "imagenameCliMigrationsV2" . }}
          command: ["/bin/sh"]
          args: ["-c", {{ .Values.application.migrateCommand | quote }}]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.application.secretName }}
          envFrom:
            - secretRef:
              name: {{ .Values.application.secretName | quote -}}
          {{- end }}
          {{- if .Values.hasura.env }}
          env: 
            {{- toYaml .Values.hasura.env | nindent 10 }}
          {{ end }}
          {{- if .Values.hasura.serverOptions -}}
          {{ toYaml .Values.hasura.serverOptions | indent 8 -}}
          {{ end }}
          {{ range $cfgKey, $cfgVal := .Values.hasura.config -}}
          - name: {{ template "prefixenv" $cfgKey }}
            value: {{ tpl (toString $cfgVal) $ | quote }}
          {{ end }}
          
{{- end -}}
